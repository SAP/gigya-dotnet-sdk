[Version 2.16.0]
* Added GSSignerRequest class for requests signed with jwt authorization header

[Version 2.15.7]
* Removed Expect100Continue header from requests

[Version 2.15.6]
* Added a new parameter to GSRequest constructor - additionalHeaders.

[Version 2.15.5]
* Changed default domain from gigya.com to us1.gigya.com
* Server response json limit now configurable (default 50mb).

[Version 2.15.4]
* Trying to access a failed response' fields now triggers an exception.
* When all connections are in use and a new request is sent, the SDK now blocks the calling thread until a connection
  frees up instead of letting .Net queue the request (which can blow up memory and increase response latencies).
* When working with multiple Gigya data centers, you can now override the default API address using the GSRequest.APIDomain
  member.
* The SDK is now strong-named. Public key: 00240000048000009400000006020000002400005253413100040000010001008738459786f4e02712712b00dedf9e80870c71bd67319fe9073c61cd984f409817a307139e3235e7d9891e57aa9d1292b2b3107567610b6f1cae510b8443a0b226e36ad6c7582b71db561be4c71bfb06d0d0d891b70d51d092087718a3dd7afad6cff55ab24ea5bff47eeb3e88a137e44ea2e2c4a77869b73c4f8d1ff4f2acb1
* You can now use paths instead of simple keys to extract values from a response, e.g. "users[0].identities[0].provider" (see socialize.exportUsers API response example)


[Version 2.15.1]

* When sending a request to the Gigya API, if the SDK detects that the client and server clocks are out of sync, it will
  automatically adjust the timestamp on outgoing requests to match the server clock.

* If a request parameter is given a null value, the SDK will now serialize it in the query string as an empty string
  instead of as the literal "null".


[Version 2.15]

* SigUtils.GetDynamicSessionSignature -  a new method for implementing dynamic control over login session expiration.
  Learn more in the Control Session Expiration guide.

* GSRequest.Send(timeout) - a new method (overriding GSRequest.Send()) that receives a timeout parameter. This parameter
  gives the option to set a response timeout.

* GSRequest.BeginSend - a new method for sending a request asynchronously.


[Version 2.14]

* Enabled GZIP compression.


[Version 2.13.4]

* GSDictionary class is deprecated, and is replaced by the following new classes:

	* GSObject - New class, used for passing parameters, for example when issuing requests or receiving response data.

	* GSArray - New class, used for passing Arrays, for example when issuing requests or receiving response data.

* All the method names now start with an upper-case letter, so as to conform with .NET coding conventions. For example:
  getParams() changed to GetParams().
